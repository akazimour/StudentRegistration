openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /v1/api/courses/{id}:
    get:
      tags:
      - course-controller
      operationId: searchCourseById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: full
        in: query
        required: false
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CourseDto'
    put:
      tags:
      - course-controller
      operationId: modifyCourse
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CourseDto'
  /v1/api/courses/search:
    get:
      tags:
      - course-controller
      operationId: dynamicSearch2
      parameters:
      - name: predicate
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Predicate'
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      - name: full
        in: query
        required: false
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CourseDto'
    post:
      tags:
      - course-controller
      operationId: dynamicSearch
      parameters:
      - name: full
        in: query
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                courseDto:
                  $ref: '#/components/schemas/CourseDto'
                pageable:
                  $ref: '#/components/schemas/Pageable'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CourseDto'
  /v1/api/teacher/search/{id}:
    get:
      tags:
      - teacher-controller
      operationId: searchTeacherById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: full
        in: query
        required: false
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TeacherDto'
  /v1/api/student/search/{id}:
    get:
      tags:
      - student-controller
      operationId: searchStudentById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: full
        in: query
        required: false
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StudentDto'
  /v1/api/courses:
    get:
      tags:
      - course-controller
      operationId: getAllCourses
      parameters:
      - name: full
        in: query
        required: false
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CourseDto'
  /v1/api/courses/{id}/history:
    get:
      tags:
      - course-controller
      operationId: getHistoryById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: full
        in: query
        required: false
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HistoryDataCourseDto'
components:
  schemas:
    CourseDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        students:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/StudentDto'
        teachers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TeacherDto'
    StudentDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        birthDate:
          type: string
          format: date
        semester:
          type: integer
          format: int32
        course:
          type: array
          items:
            $ref: '#/components/schemas/CourseDto'
    TeacherDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        birthDate:
          type: string
          format: date
    Pageable:
      type: object
      properties:
        page:
          minimum: 0
          type: integer
          format: int32
        size:
          minimum: 1
          type: integer
          format: int32
        sort:
          type: array
          items:
            type: string
    HistoryDataCourseDto:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CourseDto'
        revisionType:
          type: string
          enum:
          - ADD
          - MOD
          - DEL
        revision:
          type: integer
          format: int32
        date:
          type: string
          format: date-time
    Predicate:
      type: object
